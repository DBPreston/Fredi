<?php

class Fredi extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			'title' => 'Fredi - friendly frontend editing for PW', 
			'version' => 1, 
			'summary' => 'Adds frontend editing possibilities for ProcessWire',
			'singular' => true, 
			'autoload' => false,
			'installs' => array("ProcessFredi")
			);
	}
	
	public $enabled = TRUE;
	
	protected $pageContext;
	protected $fields;
	

	public function init() {
		
	}
	
	public function renderScript() {
		$out  = "<link rel='stylesheet' href='". wire('config')->urls->siteModules ."Fredi/tinybox2/style.css' />\n\t";
		$out .= "<script src='". wire('config')->urls->siteModules ."Fredi/tinybox2/packed.js'></script>";
		return $out;
		//<script type="text/javascript" src="tinybox.js"></script>
	}
	
	
	// TODO: make render method to allow multiple fields at a time
	public function render($fields, $pageContext = null) {
		if (is_null($pageContext)) $this->pageContext = wire('page');
		else $this->pageContext = $pageContext;
		
		$this->fields = $fields;
		
		if ( ! $this->editable()) return;
		
		return $this->_renderLink();
	}

	
	public function editable() {
	
		$fieldsArray = explode($this->fields);
		
		foreach($fieldsArray as $fieldName) {
			// Check if page has the field that wants to be edited
			if ( ! $this->pageContext->fields->has($fieldName)) return FALSE;
			
			// Check if the current user has rights to edit that field
			if ( ! $this->pageContext->editable($fieldName)) return FALSE;
			
		}
		return TRUE;
	}
	
	public function __get($fieldName) {
	
		if ( ! $this->enabled) return;
	
		$this->pageContext = wire('page');
		$this->fields = $fieldName;
		
		if ( ! $this->editable()) return;
		return $this->_renderLink();	
	}
	
	public function __call($fieldName, $args) {
	
		if ( ! $this->enabled) return;
	
		$this->fields = $fieldName;
	
		if ( ! isset($args[0])) $this->pageContext = wire('page');
		if ( $args[0] instanceof Page) $this->pageContext = $args[0];
		
		if ( ! $this->pageContext->id ) throw new WireException("Couldn't set the page context");
		
		if ( ! $this->editable()) return;
		return $this->_renderLink();
	}
	
	private function _renderLink() {
		$fieldEdit = wire('pages')->get("template=admin, name=fredi-field-edit");
		$url = "{$fieldEdit->httpUrl}?id={$this->pageContext->id}&fields={$this->fields}&modal=1";
		$onClick = "onclick=\"TINY.box.show({iframe:'$url',boxid:'frediModal',width:750,height:450,fixed:true,maskid:'bluemask',maskopacity:40})\"";
		return "<span $onClick class='fredi fredi-{$this->fields}' >". $this->_("edit") ."</span>";
	}
	

	
}